var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var appConfig = {
    appName: "consermaq",
    version: "0.0.1",
    auth_token: "consermaq_token",
    auth_sistema_contexto: "consermaq_user",
    testMode: false,
    defaultRoute: "/",
    rootServiceRoute: "http://localhost:51240/",
    serviceUrls: function () {
        return {
            autenticacao: {
                sistema: appConfig.rootServiceRoute + "api/security/token"
            },
        };
    }
};
var Consermaq;
(function (Consermaq) {
    'use strict';
    var modules = new Array();
    modules.push('ngRoute');
    modules.push('ngTouch');
    modules.push('ngAnimate');
    modules.push('ngMessages');
    modules.push('ngMaterial');
    modules.push('md.data.table');
    modules.push('ui.bootstrap');
    modules.push('toastr');
    modules.push('angular-loading-bar');
    angular.module(appConfig.appName, modules);
})(Consermaq || (Consermaq = {}));
var Consermaq;
(function (Consermaq) {
    'use strict';
    function config($routeProvider) {
        $routeProvider
            .when("/", {
            templateUrl: "app/views/home.html",
            controller: "HomeController",
            controllerAs: "vm"
        })
            .when("/postagens/:categoria", {
            templateUrl: "app/views/home.html",
            controller: "HomeController",
            controllerAs: "vm"
        })
            .when("/postagens/cidade/:city", {
            templateUrl: "app/views/home.html",
            controller: "HomeController",
            controllerAs: "vm"
        })
            .when("/postagem/:id", {
            templateUrl: "app/views/home.html",
            controller: "HomeController",
            controllerAs: "vm"
        })
            .when("/categorias", {
            templateUrl: "app/views/categoria/categorias.html",
            controller: "CategoryController",
            controllerAs: "vm"
        })
            .when("/continentes", {
            templateUrl: "app/views/continent/continents.html",
            controller: "ContinentController",
            controllerAs: "vm"
        })
            .when("/paises", {
            templateUrl: "app/views/country/countries.html",
            controller: "CountryController",
            controllerAs: "vm"
        })
            .when("/cidades", {
            templateUrl: "app/views/city/cities.html",
            controller: "CityController",
            controllerAs: "vm"
        })
            .when("/postagem", {
            templateUrl: "app/views/post/posts.html",
            controller: "PostController",
            controllerAs: "vm"
        })
            .when("/postagem/edit/:id", {
            templateUrl: "app/views/post/posts.html",
            controller: "PostController",
            controllerAs: "vm"
        })
            .when("/login", {
            templateUrl: "app/views/autenticacao/login.html",
            controller: "LoginController",
            controllerAs: "vm"
        })
            .when("/logout", {
            templateUrl: "app/views/autenticacao/login.html",
            controller: "LogoutController",
            controllerAs: "vm"
        })
            .otherwise({
            templateUrl: "app/views/shared/404.html",
            controller: "SharedController",
            controllerAs: "vm"
        });
    }
    config.$inject = ['$routeProvider'];
    angular.module(appConfig.appName).config(config);
})(Consermaq || (Consermaq = {}));
var Consermaq;
(function (Consermaq) {
    'use strict';
    function config() {
    }
    function start($rootScope, autenticacaoService) {
        autenticacaoService.carregaUsuarioAutenticado();
    }
    angular.module(appConfig.appName).config(config);
    start.$inject = ['$rootScope', 'AutenticacaoService'];
    angular.module(appConfig.appName).run(start);
})(Consermaq || (Consermaq = {}));
var Consermaq;
(function (Consermaq) {
    var User = (function () {
        function User() {
        }
        return User;
    }());
    Consermaq.User = User;
})(Consermaq || (Consermaq = {}));
var Consermaq;
(function (Consermaq) {
    var SistemaContexto = (function () {
        function SistemaContexto() {
        }
        return SistemaContexto;
    }());
    Consermaq.SistemaContexto = SistemaContexto;
})(Consermaq || (Consermaq = {}));
var Consermaq;
(function (Consermaq) {
    var LoginModel = (function () {
        function LoginModel(email, password) {
            this.email = email;
            this.password = password;
        }
        return LoginModel;
    }());
    Consermaq.LoginModel = LoginModel;
})(Consermaq || (Consermaq = {}));
var Consermaq;
(function (Consermaq) {
    var AppServiceBase = (function () {
        function AppServiceBase($rootScope, $http) {
            this.rootScope = $rootScope;
            this.httpService = $http;
        }
        AppServiceBase.prototype.handlerResponded = function (response, params) {
            response.data.requestParams = params;
            return response.data;
        };
        AppServiceBase.prototype.getByIdFromUrl = function (url, id) {
            var _this = this;
            var result = this.httpService.get(url + '/' + id, this.rootScope.header)
                .then(function (response) { return _this.handlerResponded(response, id); });
            return result;
        };
        AppServiceBase.prototype.listAllFromUrl = function (url) {
            var _this = this;
            var result = this.httpService.get(url, this.rootScope.header)
                .then(function (response) { return _this.handlerResponded(response); });
            return result;
        };
        AppServiceBase.prototype.listAllByParamFromUrl = function (url, param) {
            var _this = this;
            var result = this.httpService.get(url + "/" + param, this.rootScope.header)
                .then(function (response) { return _this.handlerResponded(response); });
            return result;
        };
        AppServiceBase.prototype.createByUrl = function (url, obj) {
            var _this = this;
            var result = this.httpService.put(url, obj, this.rootScope.header)
                .then(function (response) { return _this.handlerResponded(response); });
            return result;
        };
        AppServiceBase.prototype.updateByUrl = function (url, obj) {
            var _this = this;
            var result = this.httpService.put(url, obj, this.rootScope.header)
                .then(function (response) { return _this.handlerResponded(response); });
            return result;
        };
        AppServiceBase.prototype.removeByUrl = function (url, id) {
            var _this = this;
            var result = this.httpService.delete(url + "/" + id, this.rootScope.header)
                .then(function (response) { return _this.handlerResponded(response); });
            return result;
        };
        AppServiceBase.prototype.getFromUrl = function (url, params) {
            var _this = this;
            var result = this.httpService.get(url + (params ? params : ""), this.rootScope.header)
                .then(function (response) { return _this.handlerResponded(response, (params ? params : "")); });
            return result;
        };
        AppServiceBase.prototype.postFromUrl = function (url, obj, header) {
            var _this = this;
            if (!header)
                header = this.rootScope.header;
            var result = this.httpService.post(url, obj, header)
                .then(function (response) { return _this.handlerResponded(response); });
            return result;
        };
        return AppServiceBase;
    }());
    AppServiceBase.$inject = ['$rootScope', '$http'];
    Consermaq.AppServiceBase = AppServiceBase;
})(Consermaq || (Consermaq = {}));
var Consermaq;
(function (Consermaq) {
    var AutenticacaoService = (function (_super) {
        __extends(AutenticacaoService, _super);
        function AutenticacaoService($routeParams, $rootScope, $location, $http) {
            var _this = _super.call(this, $rootScope, $http) || this;
            _this.$routeParams = $routeParams;
            _this.$location = $location;
            _this.$http = $http;
            return _this;
        }
        AutenticacaoService.prototype.login = function (loginModel) {
            var _this = this;
            var result;
            result = this.autenticacao(loginModel)
                .then(function (response) {
                return _this.setAutenticacao(response);
            });
            return result;
        };
        AutenticacaoService.prototype.logout = function () {
            this.rootScope.token = null;
            this.rootScope.sistemaContexo = null;
            sessionStorage.removeItem(appConfig.auth_token);
            sessionStorage.removeItem(appConfig.auth_sistema_contexto);
            this.refreshHeader();
        };
        AutenticacaoService.prototype.carregaUsuarioAutenticado = function () {
            var _this = this;
            this.rootScope.token = sessionStorage.getItem(appConfig.auth_token);
            if (this.rootScope.token) {
                this.rootScope.sistemaContexo = angular.fromJson(sessionStorage
                    .getItem(appConfig.auth_sistema_contexto));
                this.refreshHeader();
                this.$location.path('/');
            }
            this.rootScope.$on("$routeChangeStart", function (event, next, current) {
                if (_this.rootScope.token == null) {
                    _this.$location.path('/login');
                }
            });
        };
        AutenticacaoService.prototype.autenticacao = function (login) {
            var dt = "grant_type=password" + "&username=" + login.email + "&password=" + login.password;
            var header = { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } };
            return _super.prototype.postFromUrl.call(this, appConfig.serviceUrls().autenticacao.sistema, dt, header);
        };
        AutenticacaoService.prototype.setAutenticacao = function (response) {
            sessionStorage.setItem(appConfig.auth_token, response.access_token);
            sessionStorage.setItem(appConfig.auth_sistema_contexto, response.sistema_contexto);
            this.carregaUsuarioAutenticado();
            return response;
        };
        AutenticacaoService.prototype.refreshHeader = function () {
            this.rootScope.header = {};
            if (this.rootScope.token && this.rootScope.sistemaContexo) {
                this.rootScope.header = {
                    headers: {
                        "Content-Type": "application/json; charset=UTF-8",
                        'Authorization': 'Bearer ' + this.rootScope.token
                    }
                };
            }
        };
        return AutenticacaoService;
    }(Consermaq.AppServiceBase));
    AutenticacaoService.$inject = ['$routeParams',
        '$rootScope',
        '$location',
        '$http'];
    Consermaq.AutenticacaoService = AutenticacaoService;
    angular.module(appConfig.appName).service("AutenticacaoService", AutenticacaoService);
})(Consermaq || (Consermaq = {}));
var Consermaq;
(function (Consermaq) {
    var LoginController = (function () {
        function LoginController($routeParams, $rootScope, $location, autenticacaoService, toastr) {
            this.$routeParams = $routeParams;
            this.$location = $location;
            this.$rootScope = $rootScope;
            this.autenticacaoService = autenticacaoService;
            this.toastr = toastr;
            this.loginModel = new Consermaq.LoginModel();
        }
        LoginController.prototype.login = function () {
            var _this = this;
            this.autenticacaoService.login(this.loginModel)
                .then(function (data) {
                _this.toastr.success("Seja bem vindo " + _this.$rootScope.sistemaContexo.usuarioLogado.email, "Você está autenticado");
                _this.$location.url("/");
            })
                .catch(function (response) {
                console.log("erro: " + response);
                _this.toastr.error("Usuário ou senha inválido ", "Erro ao autenticar");
            });
        };
        return LoginController;
    }());
    LoginController.$inject = ['$routeParams',
        '$rootScope',
        '$location',
        'AutenticacaoService',
        'toastr'];
    Consermaq.LoginController = LoginController;
    angular.module(appConfig.appName).controller('LoginController', LoginController);
})(Consermaq || (Consermaq = {}));
var Consermaq;
(function (Consermaq) {
    var LogoutController = (function () {
        function LogoutController($routeParams, $rootScope, $location, autenticacaoService, toastr) {
            this.$routeParams = $routeParams;
            this.$location = $location;
            this.$rootScope = $rootScope;
            this.autenticacaoService = autenticacaoService;
            this.toastr = toastr;
            this.loginModel = new Consermaq.LoginModel();
            this.logout();
        }
        LogoutController.prototype.logout = function () {
            this.autenticacaoService.logout();
            this.toastr.success("Obrigado por usar o sistema Travel World", "Sessão encerrada");
            this.$location.url("/");
        };
        return LogoutController;
    }());
    LogoutController.$inject = ['$routeParams',
        '$rootScope',
        '$location',
        'AutenticacaoService',
        'toastr'];
    Consermaq.LogoutController = LogoutController;
    angular.module(appConfig.appName).controller('LogoutController', LogoutController);
})(Consermaq || (Consermaq = {}));
var Consermaq;
(function (Consermaq) {
    var SharedController = (function () {
        function SharedController($location) {
            this.$location = $location;
        }
        SharedController.prototype.logout = function () {
            this.$location.path("/logout");
        };
        return SharedController;
    }());
    SharedController.$inject = ['$location'];
    Consermaq.SharedController = SharedController;
    angular.module(appConfig.appName).controller('SharedController', SharedController);
})(Consermaq || (Consermaq = {}));
var Consermaq;
(function (Consermaq) {
    var SideBarController = (function () {
        function SideBarController($mdDialog, $location, $mdMenu) {
            this.$mdDialog = $mdDialog;
            this.$location = $location;
            this.$mdMenu = $mdMenu;
        }
        SideBarController.prototype.openMenu = function ($mdOpenMenu, ev) {
            this.originatorEv = ev;
            $mdOpenMenu(ev);
        };
        ;
        SideBarController.prototype.getClass = function (path) {
            return (this.$location.path().substr(0, path.length) === path) ? 'active' : '';
        };
        SideBarController.prototype.closeMenu = function ($mdMenu, ev) {
            this.originatorEv = ev;
            $mdMenu.hide();
        };
        ;
        SideBarController.prototype.home = function () {
            this.$location.path("/");
        };
        SideBarController.prototype.categorias = function () {
            this.$location.path("/categorias");
        };
        SideBarController.prototype.continentes = function () {
            this.$location.path("/continentes");
        };
        SideBarController.prototype.paises = function () {
            this.$location.path("/paises");
        };
        SideBarController.prototype.cidades = function () {
            this.$location.path("/cidades");
        };
        SideBarController.prototype.postagem = function () {
            this.$location.path("/postagem");
        };
        SideBarController.prototype.logout = function () {
            this.$location.path("/logout");
        };
        return SideBarController;
    }());
    SideBarController.$inject = ['$mdDialog', 'CityService', 'PostService', '$location', '$mdMenu'];
    Consermaq.SideBarController = SideBarController;
    angular.module(appConfig.appName).controller('SideBarController', SideBarController).config(function ($mdThemingProvider) {
        $mdThemingProvider.theme('customTheme')
            .primaryPalette('grey')
            .accentPalette('orange')
            .warnPalette('red');
    });
})(Consermaq || (Consermaq = {}));
